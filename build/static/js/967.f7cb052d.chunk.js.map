{"version":3,"file":"static/js/967.f7cb052d.chunk.js","mappings":"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","sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","users/components/UserItem.js","users/components/UsersList.js","users/pages/Users.js"],"sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n    return (\n            <div className={`card ${props.className}`} style={props.style}>\n              {props.children}\n            </div>\n            );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n    return (\n            <div className={`avatar ${props.className}`} style={props.style}>\n              <img\n                src={props.image}\n                alt={props.alt}\n                style={{width: props.width, height: props.width}}\n              />\n            </div>\n            );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = props => {\n\n    return (\n        <li className=\"user-item\">\n            <Card className=\"user-item__content\">\n                <Link to={`/${props.id}/locations`}>\n                    <div className=\"user-item__image\">\n                        <Avatar image={`${process.env.REACT_APP_ASSET_URL}/uploads/images/${props.image}`} alt={props.name} />\n                    </div>\n                    <div className=\"user-item__info\">\n                        <h2>{props.name}</h2>\n                        <h3>\n                            {props.locationCount} {props.locationCount === 1 ? 'Location' : 'Locations'}\n                        </h3>\n                    </div>\n                </Link>\n            </Card>\n        </li>\n    );\n};\nexport default UserItem;","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props => {\n\n    if (props.items.length === 0) {\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>No users found.</h2>\n                </Card>\n            </div>\n        );\n    }\n    else {\n        return (\n            <ul className=\"users-list\">\n                {props.items.map(user => (\n                <UserItem\n                    key={user.id}\n                    id={user.id}\n                    image={user.image}\n                    name={user.name}\n                    locationCount={user.locations.length}\n                    />\n                 ))}\n            </ul>\n        );\n    }\n};\n\nexport default UsersList;","import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n\n    const { isLoading, hasError, sendRequest, clearError } = useHttpClient();\n    const [loadedUsers, setLoadedUsers] = useState();\n\n    useEffect(() => {\n\n        const fetchUsers = async () => {\n\n            try {\n                const response = await sendRequest(process.env.REACT_APP_API_URL + '/users/');\n\n                setLoadedUsers(response.users);\n            } catch (e) {\n                console.log(e);\n            }\n        };\n\n        fetchUsers();\n\n    }, [sendRequest]);\n\n    return (\n            <React.Fragment>\n                <ErrorModal error={hasError} onClear={clearError} />\n                {isLoading && <div className=\"center\"><LoadingSpinner /></div>}\n\n                { /* Only render UsersList if not loading and users are found */ }\n                {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n            </React.Fragment>\n            );\n};\n\nexport default Users;"],"names":["props","_jsx","className","concat","style","children","src","image","alt","width","height","Card","_jsxs","Link","to","id","Avatar","process","name","locationCount","items","length","map","user","UserItem","locations","_useHttpClient","useHttpClient","isLoading","hasError","sendRequest","clearError","_useState","useState","_useState2","_slicedToArray","loadedUsers","setLoadedUsers","useEffect","fetchUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","sent","users","t0","console","log","stop","apply","arguments","React","ErrorModal","error","onClear","LoadingSpinner","UsersList"],"sourceRoot":""}